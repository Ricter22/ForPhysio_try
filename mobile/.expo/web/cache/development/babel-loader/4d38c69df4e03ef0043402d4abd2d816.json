{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport io from \"socket.io-client\";\n\nvar SecondScreen = function (_React$Component) {\n  _inherits(SecondScreen, _React$Component);\n\n  var _super = _createSuper(SecondScreen);\n\n  function SecondScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SecondScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      chatMessage: \"\",\n      chatMessages: []\n    };\n    return _this;\n  }\n\n  _createClass(SecondScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.socket = io(\"http://0.0.0.0:3000\", {\n        transports: ['websocket']\n      });\n    }\n  }, {\n    key: \"submitChatMessage\",\n    value: function submitChatMessage() {\n      this.socket.emit(\"Username\", this.state.chatMessage);\n      this.setState({\n        chatMessage: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      socket.on('wrongUsername', msg);\n      var chatMessages = this.state.chatMessages.map(function (chatMessage) {\n        return React.createElement(Text, {\n          key: chatMessage\n        }, chatMessage);\n      });\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Text, null, \"Second\"), React.createElement(Button, {\n        title: \"Go to home\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Home');\n        }\n      }), React.createElement(TextInput, {\n        style: {\n          height: 40,\n          borderWidth: 2\n        },\n        autoCorrect: false,\n        value: this.state.chatMessage,\n        onSubmitEditing: function onSubmitEditing() {\n          return _this2.submitChatMessage();\n        },\n        onChangeText: function onChangeText(chatMessage) {\n          _this2.setState({\n            chatMessage: chatMessage\n          });\n        }\n      }), chatMessages);\n    }\n  }]);\n\n  return SecondScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default SecondScreen;","map":{"version":3,"sources":["/home/ric/UniversitÃ /Mobile computing/ForPhysio_try-1/mobile/Screens/secondScreen.js"],"names":["React","io","SecondScreen","props","state","chatMessage","chatMessages","socket","transports","emit","setState","on","msg","map","styles","container","navigation","navigate","height","borderWidth","submitChatMessage","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,EAAP,MAAe,kBAAf;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAFiB;AAMlB;;;;WAED,6BAAoB;AACpB,WAAKC,MAAL,GAAcN,EAAE,CAAC,qBAAD,EAAwB;AACpCO,QAAAA,UAAU,EAAE,CAAC,WAAD;AADwB,OAAxB,CAAhB;AAGC;;;WAED,6BAAoB;AACpB,WAAKD,MAAL,CAAYE,IAAZ,CAAiB,UAAjB,EAA6B,KAAKL,KAAL,CAAWC,WAAxC;AACA,WAAKK,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAE;AAAf,OAAd;AACC;;;WAED,kBAAS;AAAA;;AAEPE,MAAAA,MAAM,CAACI,EAAP,CAAU,eAAV,EAA2BC,GAA3B;AAEA,UAAMN,YAAY,GAAG,KAAKF,KAAL,CAAWE,YAAX,CAAwBO,GAAxB,CAA4B,UAAAR,WAAW;AAAA,eACxD,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA;AAAX,WAAyBA,WAAzB,CADwD;AAAA,OAAvC,CAArB;AAIA,aACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAES,MAAM,CAACC;AAApB,SACI,oBAAC,IAAD,iBADJ,EAGI,oBAAC,MAAD;AACA,QAAA,KAAK,EAAC,YADN;AAEA,QAAA,OAAO,EAAE;AAAA,iBACL,MAAI,CAACZ,KAAL,CAAWa,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B,CADK;AAAA;AAFT,QAHJ,EAUI,oBAAC,SAAD;AACA,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,WAAW,EAAE;AAA3B,SADP;AAEA,QAAA,WAAW,EAAE,KAFb;AAGA,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,WAHlB;AAIA,QAAA,eAAe,EAAE;AAAA,iBAAM,MAAI,CAACe,iBAAL,EAAN;AAAA,SAJjB;AAKA,QAAA,YAAY,EAAE,sBAAAf,WAAW,EAAI;AACzB,UAAA,MAAI,CAACK,QAAL,CAAc;AAAEL,YAAAA,WAAW,EAAXA;AAAF,WAAd;AACH;AAPD,QAVJ,EAmBKC,YAnBL,CADA;AAuBH;;;;EAnD0BN,KAAK,CAACqB,S;;AAuDjC,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AACjCR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADsB,CAAlB,CAAf;AASA,eAAezB,YAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Button, TextInput } from 'react-native';\nimport io from \"socket.io-client\";\n\nclass SecondScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatMessage: \"\",\n      chatMessages: []\n    };\n  }\n\n  componentDidMount() {\n  this.socket = io(\"http://0.0.0.0:3000\", {\n      transports: ['websocket'] //this line is fundamental\n  });\n  }\n\n  submitChatMessage() {\n  this.socket.emit(\"Username\", this.state.chatMessage);\n  this.setState({ chatMessage: \"\" });\n  }\n\n  render() {\n\n    socket.on('wrongUsername', msg)\n\n    const chatMessages = this.state.chatMessages.map(chatMessage => (\n        <Text key={chatMessage}>{chatMessage}</Text>\n      ));\n\n    return (\n    <View style={styles.container}>\n        <Text>Second</Text>\n\n        <Button\n        title=\"Go to home\"\n        onPress={() =>\n            this.props.navigation.navigate('Home')\n        }\n        />\n\n        <TextInput\n        style={{ height: 40, borderWidth: 2 }}\n        autoCorrect={false}\n        value={this.state.chatMessage}\n        onSubmitEditing={() => this.submitChatMessage()}\n        onChangeText={chatMessage => {\n            this.setState({ chatMessage });\n        }}\n        />\n        {chatMessages}\n    </View>\n    );\n}\n}\n\n// ...\nconst styles = StyleSheet.create({\ncontainer: {\n  flex: 1,\n  backgroundColor: '#fff',\n  alignItems: 'center',\n  justifyContent: 'center',\n},\n});\n\nexport default SecondScreen;"]},"metadata":{},"sourceType":"module"}