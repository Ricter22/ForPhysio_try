{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"submitLogin\",\n    value: function submitLogin() {\n      fetch('http://192.168.178.92:3000/test', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: thist.state.password\n        })\n      }).then(function (res) {\n        if (res.status !== 200) {\n          alert('Invalid username or password');\n        }\n      });\n      this.setState({\n        username: \"\"\n      });\n      this.setState({\n        password: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Text, null, \"HOME\"), React.createElement(Button, {\n        title: \"Go to Second\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Second');\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Username\",\n        autoCorrect: false,\n        value: this.state.chatMessage,\n        onSubmitEditing: function onSubmitEditing() {\n          return _this2.submitChatMessage();\n        },\n        onChangeText: function onChangeText(chatMessage) {\n          _this2.setState({\n            chatMessage: chatMessage\n          });\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Password\",\n        autoCorrect: false,\n        secureTextEntry: true\n      }));\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  TextInput: {\n    height: 40,\n    width: 200,\n    borderWidth: 2,\n    padding: 10\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/home/ric/UniversitÃ /Mobile computing/ForPhysio_try-1/mobile/Screens/homeScreen.js"],"names":["React","Component","HomeScreen","props","state","username","password","fetch","method","headers","body","JSON","stringify","thist","then","res","status","alert","setState","styles","container","navigation","navigate","TextInput","chatMessage","submitChatMessage","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","width","borderWidth","padding"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;;IAGMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAFe;AAMhB;;;;WAEH,uBAAc;AAGdC,MAAAA,KAAK,CAAC,iCAAD,EAAoC;AACvCC,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF8B;AAKvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,UAAAA,QAAQ,EAAG,KAAKD,KAAL,CAAWC,QADH;AAEnBC,UAAAA,QAAQ,EAAGO,KAAK,CAACT,KAAN,CAAYE;AAFJ,SAAf;AALiC,OAApC,CAAL,CAUCQ,IAVD,CAUM,UAAAC,GAAG,EAAG;AACV,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACrBC,UAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;AACF,OAdD;AAgBA,WAAKC,QAAL,CAAc;AAAEb,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA,WAAKa,QAAL,CAAc;AAAEZ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACC;;;WAED,kBAAS;AAAA;;AAEL,aACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEa,MAAM,CAACC;AAApB,SACI,oBAAC,IAAD,eADJ,EAGI,oBAAC,MAAD;AACA,QAAA,KAAK,EAAC,cADN;AAEA,QAAA,OAAO,EAAE;AAAA,iBACL,MAAI,CAACjB,KAAL,CAAWkB,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B,CADK;AAAA;AAFT,QAHJ,EAUI,oBAAC,SAAD;AACA,QAAA,KAAK,EAAEH,MAAM,CAACI,SADd;AAEA,QAAA,WAAW,EAAC,UAFZ;AAGA,QAAA,WAAW,EAAE,KAHb;AAIA,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWoB,WAJlB;AAKA,QAAA,eAAe,EAAE;AAAA,iBAAM,MAAI,CAACC,iBAAL,EAAN;AAAA,SALjB;AAMA,QAAA,YAAY,EAAE,sBAAAD,WAAW,EAAI;AACzB,UAAA,MAAI,CAACN,QAAL,CAAc;AAAEM,YAAAA,WAAW,EAAXA;AAAF,WAAd;AACH;AARD,QAVJ,EAsBI,oBAAC,SAAD;AACA,QAAA,KAAK,EAAEL,MAAM,CAACI,SADd;AAEA,QAAA,WAAW,EAAC,UAFZ;AAGA,QAAA,WAAW,EAAE,KAHb;AAIA,QAAA,eAAe,EAAE;AAJjB,QAtBJ,CADA;AA+BH;;;;EAjEoBtB,S;;AAqEzB,IAAMkB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADkB;AAO7BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,KAAK,EAAE,GAFE;AAGTC,IAAAA,WAAW,EAAE,CAHJ;AAITC,IAAAA,OAAO,EAAC;AAJC;AAPkB,CAAlB,CAAf;AAeA,eAAejC,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport { StyleSheet, Text, View, Button, TextInput } from 'react-native';\n\nclass HomeScreen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: \"\",\n          password: \"\"\n        };\n      }\n\n    submitLogin() {\n    //try to post something to the server\n    \n    fetch('http://192.168.178.92:3000/test', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username : this.state.username,\n        password : thist.state.password\n      }),\n    })\n    .then(res =>{\n      if (res.status !== 200){\n        alert('Invalid username or password');\n      }\n    })\n\n    this.setState({ username: \"\" });\n    this.setState({ password: \"\"})\n    }\n\n    render() {\n\n        return (\n        <View style={styles.container}>\n            <Text>HOME</Text>\n\n            <Button\n            title=\"Go to Second\"\n            onPress={() =>\n                this.props.navigation.navigate('Second')\n            }\n            />\n\n            <TextInput\n            style={styles.TextInput}\n            placeholder=\"Username\"\n            autoCorrect={false}\n            value={this.state.chatMessage}\n            onSubmitEditing={() => this.submitChatMessage()}\n            onChangeText={chatMessage => {\n                this.setState({ chatMessage });\n            }}\n            />\n            \n\n            <TextInput\n            style={styles.TextInput}\n            placeholder=\"Password\"\n            autoCorrect={false}\n            secureTextEntry={true}\n            />\n        </View>\n        );\n    }\n}\n\n// ...\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    TextInput: {\n      height: 40,\n      width: 200,\n      borderWidth: 2,\n      padding:10\n    }\n  });\n\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}