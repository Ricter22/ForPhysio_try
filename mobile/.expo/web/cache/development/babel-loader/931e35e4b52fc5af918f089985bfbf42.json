{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"submitLogin\",\n    value: function submitLogin() {\n      var _this2 = this;\n\n      fetch('http://192.168.178.92:3000/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      }).then(function (res) {\n        if (res.status !== 200) {\n          alert('Invalid username or password');\n        } else {\n          alert('Succesful login');\n\n          _this2.props.navigation.navigate('Home');\n        }\n      });\n      this.setState({\n        username: \"\"\n      });\n      this.setState({\n        password: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Text, null, \"LOGIN\"), React.createElement(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Username\",\n        autoCorrect: false,\n        value: this.state.username,\n        onChangeText: function onChangeText(username) {\n          _this3.setState({\n            username: username\n          });\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Password\",\n        autoCorrect: false,\n        secureTextEntry: true,\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          _this3.setState({\n            password: password\n          });\n        }\n      }), React.createElement(Button, {\n        title: \"Login\",\n        onPress: function onPress() {\n          return _this3.submitLogin();\n        }\n      }), React.createElement(Button, {\n        title: \"Go to Registration\",\n        onPress: function onPress() {\n          _this3.props.navigation.navigate('Registration');\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  TextInput: {\n    height: 40,\n    width: 200,\n    borderWidth: 2,\n    padding: 10\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/home/ric/UniversitÃ /Mobile computing/ForPhysio_try-1/mobile/Screens/loginScreen.js"],"names":["React","Component","LoginScreen","props","state","username","password","fetch","method","headers","body","JSON","stringify","then","res","status","alert","navigation","navigate","setState","styles","container","TextInput","submitLogin","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","width","borderWidth","padding"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { StyleSheet, Text, View, Button, TextInput } from 'react-native';\n\nclass LoginScreen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: \"\",\n          password: \"\"\n        };\n      }\n\n    submitLogin() {\n    \n      //here we're going to post the username and password inserted in the\n      //login page, in particulare this is a post request to the /signin route\n      //in the server that will response with status:200 if the credentials are in the \n      //database and with status:422 if not\n      fetch('http://192.168.178.92:3000/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username : this.state.username,\n          password : this.state.password\n        }),\n      }) //here we handle the status response of the server\n      .then(res =>{\n        if (res.status !== 200){\n          alert('Invalid username or password');\n        }\n        else{\n          alert('Succesful login')\n          this.props.navigation.navigate('Home')\n        }\n      })\n      //here we set again username and password as blank\n      //probably in the future we'll need to send the credentials to the home page \n      //to create the user for the socket.io chat\n      this.setState({ username: \"\" });\n      this.setState({ password: \"\" });\n    }\n\n    render() {\n\n        return (\n        <View style={styles.container}>\n            <Text>LOGIN</Text>\n\n            <TextInput\n            style={styles.TextInput}\n            placeholder = \"Username\"\n            autoCorrect = {false}\n            value = {this.state.username}\n            onChangeText = {username => {\n                this.setState({ username });\n              }}\n            />\n            \n\n            <TextInput\n            style={styles.TextInput}\n            placeholder=\"Password\"\n            autoCorrect={false}\n            secureTextEntry={true}\n            value = {this.state.password}\n            onChangeText = {password => {\n                this.setState({ password });\n              }}\n            />\n\n            <Button\n            title=\"Login\"\n            onPress={() =>\n                this.submitLogin()\n              }\n            />\n            {/* this will be the button for the registration page */}\n            <Button\n            title=\"Go to Registration\"\n            onPress={() => {\n                this.props.navigation.navigate('Registration')\n              }   \n            }\n            />\n          </View>\n        );\n    }\n}\n\n// ...\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    TextInput: {\n      height: 40,\n      width: 200,\n      borderWidth: 2,\n      padding:10\n    }\n  });\n\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}