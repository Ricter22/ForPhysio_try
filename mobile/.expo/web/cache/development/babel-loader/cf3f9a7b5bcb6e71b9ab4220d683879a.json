{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from \"./Screens/loginScreen\";\nimport HomeScreen from \"./Screens/homeScreen\";\nimport RegistrationScreen from \"./Screens/registrationScreen\";\nvar Stack = createNativeStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), React.createElement(Stack.Screen, {\n        name: \"Registration\",\n        component: RegistrationScreen\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/ric/Universit√†/Mobile computing/ForPhysio_try-1/mobile/App.js"],"names":["React","NavigationContainer","createNativeStackNavigator","LoginScreen","HomeScreen","RegistrationScreen","Stack","App","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,kBAAP;AAEA,IAAMC,KAAK,GAAGJ,0BAA0B,EAAxC;;IAEMK,G;;;;;;;;;;;;;WAGJ,kBAAS;AACP,aACE,oBAAC,mBAAD,QACA,oBAAC,KAAD,CAAO,SAAP,QACE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAEJ;AAFb,QADF,EAKE,oBAAC,KAAD,CAAO,MAAP;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAEC;AAFf,QALF,EASE,oBAAC,KAAD,CAAO,MAAP;AACI,QAAA,IAAI,EAAC,cADT;AAEI,QAAA,SAAS,EAAEC;AAFf,QATF,CADA,CADF;AAkBD;;;;EAtBeL,KAAK,CAACQ,S;;AA2BxB,eAAeD,GAAf","sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from './Screens/loginScreen'\nimport HomeScreen from './Screens/homeScreen'\nimport RegistrationScreen from './Screens/registrationScreen'\n\nconst Stack = createNativeStackNavigator();\n\nclass App extends React.Component {\n\n  \n  render() {\n    return (\n      <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Login\"\n          component={LoginScreen}\n        />\n        <Stack.Screen\n            name=\"Home\"\n            component={HomeScreen}\n          />\n        <Stack.Screen\n            name=\"Registration\"\n            component={RegistrationScreen}\n          />\n      </Stack.Navigator>\n    </NavigationContainer>\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}