{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport io from \"socket.io-client\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      chatMessage: \"\",\n      chatMessages: []\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.socket = io(\"http://46.114.173.104:3000\");\n    }\n  }, {\n    key: \"submitChatMessage\",\n    value: function submitChatMessage() {\n      this.socket.emit(\"chat message\", this.state.chatMessage);\n      this.setState({\n        chatMessage: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var chatMessages = this.state.chatMessages.map(function (chatMessage) {\n        return React.createElement(Text, {\n          key: chatMessage\n        }, chatMessage);\n      });\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Text, null, \"HOME\"), React.createElement(Button, {\n        title: \"Go to Second\",\n        onPress: function onPress() {\n          return _this2.socket.emit('chat message', 'hello');\n        }\n      }), React.createElement(TextInput, {\n        style: {\n          height: 40,\n          borderWidth: 2\n        },\n        autoCorrect: false,\n        value: this.state.chatMessage,\n        onSubmitEditing: function onSubmitEditing() {\n          return _this2.submitChatMessage();\n        },\n        onChangeText: function onChangeText(chatMessage) {\n          _this2.setState({\n            chatMessage: chatMessage\n          });\n        }\n      }), chatMessages);\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/home/ric/UniversitÃ /Mobile computing/ForPhysio_try-1/mobile/Screens/homeScreen.js"],"names":["React","Component","io","HomeScreen","props","state","chatMessage","chatMessages","socket","emit","setState","map","styles","container","height","borderWidth","submitChatMessage","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;AAEA,OAAOC,EAAP,MAAe,kBAAf;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAFe;AAMhB;;;;WAEH,6BAAoB;AACpB,WAAKC,MAAL,GAAcN,EAAE,CAAC,4BAAD,CAAhB;AACC;;;WAED,6BAAoB;AACpB,WAAKM,MAAL,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,KAAKJ,KAAL,CAAWC,WAA5C;AACA,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAE;AAAf,OAAd;AACC;;;WAED,kBAAS;AAAA;;AAEL,UAAMC,YAAY,GAAG,KAAKF,KAAL,CAAWE,YAAX,CAAwBI,GAAxB,CAA4B,UAAAL,WAAW;AAAA,eACxD,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA;AAAX,WAAyBA,WAAzB,CADwD;AAAA,OAAvC,CAArB;AAIA,aACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEM,MAAM,CAACC;AAApB,SACI,oBAAC,IAAD,eADJ,EAGI,oBAAC,MAAD;AACA,QAAA,KAAK,EAAC,cADN;AAEA,QAAA,OAAO,EAAE;AAAA,iBAEL,MAAI,CAACL,MAAL,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,OAAjC,CAFK;AAAA;AAFT,QAHJ,EAWI,oBAAC,SAAD;AACA,QAAA,KAAK,EAAE;AAAEK,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,WAAW,EAAE;AAA3B,SADP;AAEA,QAAA,WAAW,EAAE,KAFb;AAGA,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,WAHlB;AAIA,QAAA,eAAe,EAAE;AAAA,iBAAM,MAAI,CAACU,iBAAL,EAAN;AAAA,SAJjB;AAKA,QAAA,YAAY,EAAE,sBAAAV,WAAW,EAAI;AACzB,UAAA,MAAI,CAACI,QAAL,CAAc;AAAEJ,YAAAA,WAAW,EAAXA;AAAF,WAAd;AACH;AAPD,QAXJ,EAoBKC,YApBL,CADA;AAwBH;;;;EAhDoBN,S;;AAoDzB,IAAMW,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADkB,CAAlB,CAAf;AASA,eAAenB,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport { StyleSheet, Text, View, Button, TextInput } from 'react-native';\nimport io from \"socket.io-client\";\n\nclass HomeScreen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          chatMessage: \"\",\n          chatMessages: []\n        };\n      }\n\n    componentDidMount() {\n    this.socket = io(\"http://46.114.173.104:3000\");\n    }\n\n    submitChatMessage() {\n    this.socket.emit(\"chat message\", this.state.chatMessage);\n    this.setState({ chatMessage: \"\" });\n    }\n\n    render() {\n\n        const chatMessages = this.state.chatMessages.map(chatMessage => (\n            <Text key={chatMessage}>{chatMessage}</Text>\n          ));\n\n        return (\n        <View style={styles.container}>\n            <Text>HOME</Text>\n\n            <Button\n            title=\"Go to Second\"\n            onPress={() =>\n                //this.props.navigation.navigate('Second')\n                this.socket.emit('chat message', 'hello')\n            }\n            />\n\n            <TextInput\n            style={{ height: 40, borderWidth: 2 }}\n            autoCorrect={false}\n            value={this.state.chatMessage}\n            onSubmitEditing={() => this.submitChatMessage()}\n            onChangeText={chatMessage => {\n                this.setState({ chatMessage });\n            }}\n            />\n            {chatMessages}\n        </View>\n        );\n    }\n}\n\n// ...\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  });\n\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}