{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport io from \"socket.io-client\";\n\nvar SecondScreen = function (_React$Component) {\n  _inherits(SecondScreen, _React$Component);\n\n  var _super = _createSuper(SecondScreen);\n\n  function SecondScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SecondScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      chatMessage: \"\",\n      chatMessages: []\n    };\n    return _this;\n  }\n\n  _createClass(SecondScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.socket = io(\"http://0.0.0.0:3000\", {\n        transports: ['websocket']\n      });\n    }\n  }, {\n    key: \"submitChatMessage\",\n    value: function submitChatMessage() {\n      this.socket.emit(\"chat message\", this.state.chatMessage);\n      this.setState({\n        chatMessage: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(Text, null, \"Second Page\"), React.createElement(Button, {\n        title: \"Go to Home\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Home');\n        }\n      }), React.createElement(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Username\",\n        autoCorrect: false,\n        value: this.state.chatMessage,\n        onSubmitEditing: function onSubmitEditing() {\n          return _this2.submitChatMessage();\n        },\n        onChangeText: function onChangeText(chatMessage) {\n          _this2.setState({\n            chatMessage: chatMessage\n          });\n        }\n      }), chatMessages);\n    }\n  }]);\n\n  return SecondScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default SecondScreen;","map":{"version":3,"sources":["/home/ric/Universit√†/Mobile computing/ForPhysio_try-1/mobile/Screens/secondScreen.js"],"names":["React","io","SecondScreen","props","state","chatMessage","chatMessages","socket","transports","emit","setState","styles","container","navigation","navigate","TextInput","submitChatMessage","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,EAAP,MAAe,kBAAf;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAFiB;AAMlB;;;;WAED,6BAAoB;AAClB,WAAKC,MAAL,GAAcN,EAAE,CAAC,qBAAD,EAAwB;AACpCO,QAAAA,UAAU,EAAE,CAAC,WAAD;AADwB,OAAxB,CAAhB;AAGC;;;WAED,6BAAoB;AACpB,WAAKD,MAAL,CAAYE,IAAZ,CAAiB,cAAjB,EAAiC,KAAKL,KAAL,CAAWC,WAA5C;AAGA,WAAKK,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAE;AAAf,OAAd;AACC;;;WAGH,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEM,MAAM,CAACC;AAApB,SACE,oBAAC,IAAD,sBADF,EAGE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACT,KAAL,CAAWU,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B,CADO;AAAA;AAFX,QAHF,EASE,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEH,MAAM,CAACI,SADlB;AAEI,QAAA,WAAW,EAAC,UAFhB;AAGI,QAAA,WAAW,EAAE,KAHjB;AAII,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,WAJtB;AAKI,QAAA,eAAe,EAAE;AAAA,iBAAM,MAAI,CAACW,iBAAL,EAAN;AAAA,SALrB;AAMI,QAAA,YAAY,EAAE,sBAAAX,WAAW,EAAI;AACzB,UAAA,MAAI,CAACK,QAAL,CAAc;AAAEL,YAAAA,WAAW,EAAXA;AAAF,WAAd;AACH;AARL,QATF,EAmBOC,YAnBP,CADF;AAuBD;;;;EA/CwBN,KAAK,CAACiB,S;;AAmDjC,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADkB,CAAlB,CAAf;AASA,eAAerB,YAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport io from \"socket.io-client\";\n\nclass SecondScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatMessage: \"\",\n      chatMessages: []\n    };\n  }\n\n  componentDidMount() {\n    this.socket = io(\"http://0.0.0.0:3000\", {\n        transports: ['websocket'] //this line is fundamental\n    });\n    }\n\n    submitChatMessage() {\n    this.socket.emit(\"chat message\", this.state.chatMessage);\n    //try to post something to the server\n\n    this.setState({ chatMessage: \"\" });\n    }\n\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text>Second Page</Text>\n\n        <Button\n          title=\"Go to Home\"\n          onPress={() =>\n            this.props.navigation.navigate('Home')\n          }\n        />\n        <TextInput\n            style={styles.TextInput}\n            placeholder=\"Username\"\n            autoCorrect={false}\n            value={this.state.chatMessage}\n            onSubmitEditing={() => this.submitChatMessage()}\n            onChangeText={chatMessage => {\n                this.setState({ chatMessage });\n            }}\n            />\n            {chatMessages}\n      </View>\n    );\n  }\n}\n\n// ...\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  });\n\nexport default SecondScreen;"]},"metadata":{},"sourceType":"module"}