{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport homeScreen from \"./Screens/homeScreen\";\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nvar Stack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, null, \"name=\\\"Home\\\" component=\", homeScreen), React.createElement(Stack.Screen, null, \"name=\\\"Second\\\" component=\", secondScreen)));\n    }\n  }]);\n\n  return App;\n}(React.Component);","map":{"version":3,"sources":["/home/ric/Universit√†/Mobile computing/ForPhysio_try-1/mobile/App.js"],"names":["StatusBar","React","homeScreen","NavigationContainer","createStackNavigator","Stack","App","secondScreen","Component"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,UAAP;AACA,OAAO,8BAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;;IAEME,G;;;;;;;;;;;;;WACJ,kBAAS;AACP,aACE,oBAAC,mBAAD,QACE,oBAAC,KAAD,CAAO,SAAP,QACC,oBAAC,KAAD,CAAO,MAAP,oCAEYJ,UAFZ,CADD,EAKC,oBAAC,KAAD,CAAO,MAAP,sCAEYK,YAFZ,CALD,CADF,CADF;AAcD;;;;EAhBeN,KAAK,CAACO,S","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport homeScreen from './Screens/homeScreen';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst Stack = createStackNavigator();\n\nclass App extends React.Component {\n  render (){\n    return (\n      <NavigationContainer>\n        <Stack.Navigator>\n         <Stack.Screen>\n          name=\"Home\"\n          component={homeScreen}\n         </Stack.Screen>\n         <Stack.Screen>\n          name=\"Second\"\n          component={secondScreen}\n         </Stack.Screen>\n        </Stack.Navigator>\n      </NavigationContainer>    \n    );\n  }\n  }\n\n"]},"metadata":{},"sourceType":"module"}